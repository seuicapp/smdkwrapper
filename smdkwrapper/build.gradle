apply plugin: 'com.android.library'
apply plugin: 'com.github.panpf.bintray-publish'
apply plugin: 'com.android.library'
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 20
        targetSdkVersion 30
        versionCode 3
        versionName "0.0.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.panpf.bintray-publish:bintray-publish:1.0.0'
    }
}
dependencies {
    compileOnly fileTree(dir: "libs", include: ["*.jar"])
//    implementation 'androidx.appcompat:appcompat:1.2.0'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
// 配置maven库，生成POM.xml文件
publish{
    repoName ='seuic'//仓库名
    userOrg='seuicapp'//用户名
    groupId = 'com.seuic.mdm.api'//自定义
    artifactId = 'smdkwrapper'//自定义
    publishVersion = '0.0.3'
    desc = 'The SMDKWrapper package of the seuic'
    website ='https://github.com/seuicapp/smdkwrapper'
}
bintray{
    override = true
}
sourceCompatibility = "1.7"
targetCompatibility = "1.7"

task clearJar(type: Delete) {
    delete "$rootProject.projectDir/demousingsdk/libs/"
    delete "$rootProject.projectDir/sdk_demo_online/libs/"
}
task copyFileToProject1(type: Copy) {
    from('build/intermediates/bundles/debug/')
    into("$rootProject.projectDir/demousingsdk/libs/")
    include('classes.jar')
    rename('classes.jar', 'xiaoi_sdk.jar')
}
task copyFileToProject2(type: Copy) {
    from('build/intermediates/bundles/debug/')
    into("$rootProject.projectDir/sdk_demo_online/libs/")
    include('classes.jar')
    rename('classes.jar', 'xiaoi_sdk.jar')
}

//定义makeJar任务打包jar包 start
task makeJar(type: Copy){
    delete 'build/libs/xiaoi_sdk.jar'//先删除存在的jar包
    from('build/intermediates/bundles/release/')//
    into('build/libs/')//打包后生成的jar包的存放目录
    include('classes.jar')//include、exclude参数过滤，这里只关注classes.jar
    rename ('classes.jar', 'xiaoi_sdk.jar')
}
//定义makeJar任务打包jar包 end
makeJar.dependsOn(clearJar, build, copyFileToProject1, copyFileToProject2)